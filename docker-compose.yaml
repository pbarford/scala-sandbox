zookeeper:
  image: confluent/zookeeper:latest
  ports:
    - "2181:2181"

kafka:
  build: docker/kafka
  hostname: kafka
  ports:
    - "9092:9092"
  links:
    - zookeeper:zookeeper
  environment:
    - KAFKA_ADVERTISED_HOST_NAME=kafka
    - KAFKA_ADVERTISED_PORT=9092
    - KAFKA_DELETE_TOPIC_ENABLE=true
    - KAFKA_LOG_RETENTION_HOURS=1
    - KAFKA_MESSAGE_MAX_BYTES=10000000
    - KAFKA_REPLICA_FETCH_MAX_BYTES=10000000
    - KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS=60000
    - KAFKA_CREATE_TOPICS=Foo:5:1,Bar:10:1
    - KAFKA_NUM_PARTITIONS=5
    - KAFKA_DELETE_RETENTION_MS=1000
    - KAFKA_JMX_PORT=3099
    - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=3099

rabbitmq:
  hostname: rabbitmq
  image: rabbitmq
  ports:
    - "5672:5672"
    - "15672:15672"
  volumes:
    - "$PWD/docker/rabbitmq/data/log:/var/log"
    - "$PWD/docker/rabbitmq/rabbit_enabled_plugins:/etc/rabbitmq/enabled_plugins"
    - "$PWD/docker/rabbitmq/data/config/rabbitmq.config:/etc/rabbitmq/rabbitmq.config"
    - "$PWD/docker/rabbitmq/data/config/definitions.json:/etc/rabbitmq/definitions.json"

cassandra:
  build: docker/cassandra
  hostname: cassandra
  command: /bin/sh -c "cassandra-singlenode;while true; do sleep 5; done"
  ports:
    - "7199:7199"
    - "7000:7000"
    - "7001:7001"
    - "9160:9160"
    - "9042:9042"
    - "25:22"
    - "8012:8012"
    - "61621:61621"